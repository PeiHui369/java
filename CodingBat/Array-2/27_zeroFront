Return an array that contains the exact same numbers as the given array, but rearranged so that all the zeros are grouped at the start of the array. The order of the non-zero numbers does not matter. So {1, 0, 0, 1} becomes {0 ,0, 1, 1}. You may modify and return the given array or make a new array.


zeroFront([1, 0, 0, 1]) → [0, 0, 1, 1]
zeroFront([0, 1, 1, 0, 1]) → [0, 0, 1, 1, 1]
zeroFront([1, 0]) → [0, 1]



public int[] zeroFront(int[] nums){
  int count = 0;                            //initialize index outside, is to count how many 0 has been find(should put the next 0 at what index)
  for(int i = 0; i < nums.length; i++){     
    if(nums[i] == 0){                       //if found 0 behind
      nums[i] = nums[count];                //behind will get the value of the front (to be replaced)
      nums[count] = 0;                      //front become 0
      count++;                              //increase count by 1 when found 0
    }
  }
  return nums;
}
