// JColorChooser = A GUI mechanism that let's a user choose a color

<Main.java>
public class Main {
    public static void main(String[] args) {

        new MyFram();

    }
}


<MyFram.java>
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;

public class MyFram extends JFrame implements KeyListener {

    JLabel label;
    ImageIcon icon = new ImageIcon();

    MyFram(){
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setSize(500,500);
        this.setLayout(null);
        this.addKeyListener(this);

        icon = new ImageIcon("icy.png");

        label = new JLabel();
        label.setBounds(0,0,100,100);
        label.setBackground(Color.red);
        label.setOpaque(true);//to display background colour
        label.setIcon(icon)

        this.getContentPane(Color.black);
        this.add(label);
        this.setVisible(true);
    }


    @Override
    //keyTyped = Invoked when a key is typed. Uses KeyChar, char output
    public void keyTyped(KeyEvent e) {
        switch(e.getKeyChar()){
            case 'a':label.setLocation(label.getX()-10,label.getY());
                break;
            case 'w':label.setLocation(label.getX(),label.getY()-10);
                break;
            case 's': label.setLocation(label.getX(),label.getY()+10);
                break;
            case'd':label.setLocation(label.getX()+10,label.getY());
                break;
        }
    }

    @Override
    //keyPressed = Invoked when a physical key is pressed down. Uses KeyCode, int output
    public void keyPressed(KeyEvent e) {
        // - move up, +move down, x+10: move right, y+10: move left
        switch(e.getKeyCode()){
            case 37:label.setLocation(label.getX()-10,label.getY());
                break;
            case 38:label.setLocation(label.getX(),label.getY()-10);
                break;
            case 39: label.setLocation(label.getX()+10,label.getY());
                break;
            case 40:label.setLocation(label.getX(),label.getY()+10);
                break;
        }
    }

    @Override
    //keyReleased = called whenever a button is released
    public void keyReleased(KeyEvent e) {
        System.out.println("You released key char: "+ e.getKeyChar());//a,b,c,
        System.out.println("You released key code: "+ e.getKeyCode());//65,66,67

    }
}

