170. Write a Java program to find the length of the longest consecutive sequence of a given array of integers. Go to the editor

Original array: [1, 1, 2, 3, 3, 4, 5, 2, 4, 5, 6, 7, 8, 9, 6, -1, -2]
7

--------------------------------------------------------------------------
<SAMPLE SOLUTION>
import java.util.*;
public class Solution {	
 public static int longest_sequence(int[] nums) {
 
 //Avoid exception
    if (nums == null) {
      throw new IllegalArgumentException("Null array..!");
    }
    if (nums.length == 0) {
      return 0;
    }
 
    boolean flag = false;
 
 //Initialization
    int result = 0;
    int start = 0, end = 0;
	
 //To loop through all elements
    for (int i = 1; i < nums.length; i++) {
 //If greater than next, then will set as 'end':greater num
      if (nums[i - 1] < nums[i]) {
        end = i;
 //If smaller than next, then will set as 'start':smaller num
      } else {
        start = i;
      }
 //Longest consequence: (end-start) + 1
      if (end - start > result) {
        flag = true;
        result = end - start;
      }
    }
    if (flag) 
	{
      return result + 1;
    } 
	else 
	{
      return result;
    }
 }



   public static void main(String[] args) {
        int[] nums = { 1, 1, 2, 3, 3, 4, 5, 2, 4, 5, 6, 7, 8, 9, 6, -1, -2 };
		System.out.println("\nOriginal array: "+Arrays.toString(nums));  
		System.out.println(longest_sequence(nums));		
		}

}


================================
ANALYSIS
================================
i) b4 smaller than after? (end = indexNo : start = indexNo)
ii) end - start > result (before this end-start)
iii) if both true, return result + 1

    /* 
    { 1, 1, 2, 3, 3, 4, 5, 2, 4, 5, 6, 7, 8, 9, 6, -1, -2 }
    for(int i = 1; i < 17; i++){
    	
	if(1 < 1） FALSE
	else{ start = 1}
	if(0-1 > 0) FALSE
	if(flag) FALSE
	>> result = 0
	
	if(1<2) { end = 2 }
	if(2-1 > 0){
	flag = true;
	result = 2-1 = 1; }
	if(flag){ result+1 = 1+1 = 2; }
	>> result = 2
	
	if(2<3) { end = 3 }
	if(3-1 > 2) FALSE
	if(flag) FALSE
	>> result = 2
	
	if(3<3) FALSE
	else{ start = 4 }
	if(3-4 > 2) FALSE
	if(flag) FALSE
	>> result = 2
	
	if(3<4) {end = 4}
	if( 4-4 > 2) FALSE
	if(flag) FALSE
	>> result = 2
	
	if(4<5) {end = 5}
	if( 5-4 > 2) FALSE
	if(flag) FALSE
	>> result = 2
	
	if(5<2) {start = 6}
	>> result = 2
	
	if(2<4) {end = 7}
	>> result = 2
	
	if( 4<5) {end = 8}
	>> result = 2
	
	if (5<6) {end = 9}
	if(9-6 > 2){
	flag = true;
	result = 3;}
	if(flag){
	result+1 = 3+1 = 4;
	
	if(6<7) {end = 10}
	if(10-6 > 3){
	flag = true;
	result = 4;}
	if(flag){
	result+1 = 4+1 = 5;}
	>> result = 5
	
	if(7<8) {end = 11}
	if(11-6 > 4）{
	flag = true;
	result = 5;}
	if(flag){
	result+1 = 5+1 = 6;}
	
	if(8<9) {end=12}
	if(12-6 > 5){
	flag = true;
	result = 6;}
	if(flag){
	result+1 = 6+1 = 7

	*/
	
	
