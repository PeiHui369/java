@ To print string multiple times (with return)
String result = "";                               //create empty str var
  for (int i=0; i<n; i++) {
    result = result + str;  // could use += here  //add the str to var
  }             
  return result;                                  //print var
}

@Length
String.length()
Array.length

@Equals
str.equals(str2)
str.charAt(i) == 'x'
a == 1

@To count xx (xxx contains 2 xx)
  for (int i = 0; i < str.length()-1; i++) {        //To pull out length 2 substring without outOfBound error
if (str.substring(i, i+2).equals("xx")) count++;}

@ FIRST OCCURENCE : str.indexOf()
returns the position of the first occurrence of specified character(s) in a string.
- str.indexOf('char', startSearchPosition);
- -1 if not found

@ Find 2 same tgt
int i = str.indexOf("x");
  if (i == -1) return false;                  // no "x" at all
  if (i+1 >= str.length()) return false;      // check i+1 in bounds
return str.substring(i+1, i+2).equals("x");

@
startsWith() method checks whether a string starts with the specified character(s).
endsWith() method to check whether a string ends with the specified character(s).

@ Find 2 char tgt: if(str.length()<2){return false;}

@ return a new string made of every other char starting with the first
Take 1 skip 1: for(int i = 0; i<str.length() ;i+=2)

@  str.charAt(i) SAME AS str.substring(i, i+1)


