/*
Comparators: compare 2 objects

Interface Comparator <T>
- int compare (T o1, T o2)
o1<o2 : -1
o1 = o2 : 0
o1 > o2 : 1
Throw NullPointerException & ClassCastException

- boolean equals (Object obj)

Given array of n Player objects, comparator sorts in decreasing score order
If >=2 same score, sort alphabetically <- Create Checker class implements Comparator interface & int compare (Player a, Player b) method implementing Comparator.compare( T o1, T o2) method

*/

import java.util.*;

// Write your Checker class here
class Checker implements Comparator<Player> {
    @Override
    public int compare(Player a, Player b){
        if(a.score == b.score){
            return a.name.compareToIgnoreCase(b.name);
        }else if(a.score > b.score) {
            return -1;
        } else if(a.score < b.score) {
            return 1;
        }
        return 1;
    }
}

class Player{
    String name;
    int score;
    
    Player(String name, int score){
        this.name = name;
        this.score = score;
    }
}

class Solution {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();

        Player[] player = new Player[n];
        Checker checker = new Checker();
        
        for(int i = 0; i < n; i++){
            player[i] = new Player(scan.next(), scan.nextInt());
        }
        scan.close();
     
        Arrays.sort(player, checker);
        for(int i = 0; i < player.length; i++){
            System.out.printf("%s %s\n", player[i].name, player[i].score);
        }
    }
}
