Q1_Create Data object using Calendar class

Calendar cal = Calendar.getInstance();
     // Sets the given calendar field value and the time value
     // (millisecond offset from the Epoch) of this Calendar undefined.
     cal.clear();
     System.out.println();
     cal.set(Calendar.YEAR, year);
     cal.set(Calendar.MONTH, month);
     cal.set(Calendar.DATE, date);

     System.out.println(cal.getTime());
     ###
     
Q2_Get & display info

  Calendar cal = Calendar.getInstance();
  System.out.println("Year: " + cal.get(Calendar.YEAR));
 ###
 
Q3_cal.getActualMaximum(Calendar.YEAR) *Get max value from current date*
 
    Calendar cal = Calendar.getInstance();
		System.out.println();
		System.out.println("\nCurrent Date and Time:" + cal.getTime());		
		int actualMaxYear = cal.getActualMaximum(Calendar.YEAR);
    System.out.println("Actual Maximum Year: "+actualMaxYear);
    ###
    
Q4_cal.getActualMinimum(Calendar.YEAR) *Get min value*
similar to Q3

Q5_cal.setTimeZone(TimeZone.getTimeZone("/")); *
cal.setTimeZone(TimeZone.getTimeZone("America/New_York));
cal.get(Calendar.HOUR_OF_DAY);

Q6_cal.get(Calendar.DATE)
- (cal.get(Calendar.MONTH) + 1)

Q7_cal.getActualMaximum(Calendar.DAY_OF_MONTH) *get last day of current month*

Q8_get last date of month
cal.set(Calendar.DAY_OF_MONTH, cal.getActualMaximum(Calendar.DAY_OF_MONTH));
System.out.println(cal.getTime());

Q9_calc first & last day of each week
// Get calendar set to current date and time
      Calendar c = Calendar.getInstance();

     // Set the calendar to monday of the current week
     c.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);

        System.out.println();
     // Print dates of the current week starting on Monday
       DateFormat df = new SimpleDateFormat("EEE dd/MM/yyyy");#
       System.out.println(df.format(c.getTime()));
        for (int i = 0; i <6; i++) {
         c.add(Calendar.DATE, 1);
           }
        System.out.println(df.format(c.getTime()));
		System.out.println();
     }

Q10_Get the name of the first and last day of a month
	 String firstDay = ym.atDay(1).getDayOfWeek().name(); 
	 String lastDay = ym.atEndOfMonth().getDayOfWeek().name(); 
   
Q11_Get no. of days of month
   Calendar cal = Calendar.getInstance();
   int days = cal.getActualMaximum(Calendar.DAY_OF_MONTH);
   
Q12_Get localized day-in-week name
   DateFormatSymbols symbols = new DateFormatSymbols(new Locale("de")); //Localized in German
   String[] dayNames = symbols.getWeekdays();
    for (String s : dayNames) {
    
Q13_Get a day of week of specific date
   Calendar cal = Calendar.getInstance();
 //Set your date: cal.setTime(yourDate);
	 System.out.println();
   int dayOfWeek = cal.get(Calendar.DAY_OF_WEEK); #
   
Q14_Get current local time
    LocalTime time = LocalTime.now(); // in hour, minutes, seconds, nano seconds
    
Q15_Add some hours to the current time
    LocalTime time = LocalTime.now(); 
    LocalTime newTime = time.plusHours(4);# // adding four hours
    
Q16_Get a date after 2 weeks
     int noOfDays = 14; #
     Calendar cal = Calendar.getInstance();
     Date cdate = cal.getTime();
     cal.add(Calendar.DAY_OF_YEAR, noOfDays); #
     Date date = cal.getTime(); #
     
 Q17_Get a date b4 & after 1 year
     //get this year
     Calendar cal = Calendar.getInstance();
      Date cdate = cal.getTime();
      // get next year
      cal.add(Calendar.YEAR, 1); #
      Date nyear = cal.getTime();
      //get previous year
      cal.add(Calendar.YEAR, -2); #
      Date pyear = cal.getTime();

Q18_To check leap year
    if((year % 400 == 0) || ((year % 4 == 0) && (year % 100 != 0)))
    
Q19_Get year & months between 2 dates (difference between 2 dates)
    LocalDate today = LocalDate.now();    
    LocalDate userday = LocalDate.of(2015, Month.MAY, 15); 
    Period diff = Period.between(userday, today); 
    
Q20_Get current timestamp
     Instant timestamp = Instant.now(); 
    
Q21_Get current time in all available time zones
    ZoneId.SHORT_IDS.keySet().
    stream().forEach( 
    zoneKey ->System.out.println(" "+ ZoneId.of( ZoneId.SHORT_IDS.get( zoneKey ) ) +": "+ LocalDateTime.now(ZoneId.of(ZoneId.SHORT_IDS.get( zoneKey ) ) ) ) );
    
Q22_Get dates 10days b4 & after
    #name.plusDays( +ve or -ve value)
     LocalDate today = LocalDate.now(); 
     today.plusDays(-10)
     today.plusDays(10)
     
Q23_Get months remaining in the year
     LocalDate today = LocalDate.now(); 
     LocalDate lastDayOfYear = today.with(TemporalAdjusters.lastDayOfYear());
     Period period = today.until(lastDayOfYear);
     period.getMonths() //Change to month
     
Q24_Display dates in format
//Refer to the file

Q25_Get info (leap&length) of year
    Year yr = Year.now();	//Current year
    Year yr = Year.of(2001);    //Given year
     boolean isLeap = yr.isLeap(); // false
     int length = yr.length(); // 365
     
Q26_Get info of current or given month
 // information about the month
      LocalDate ldt = LocalDate.of(2016, Month.FEBRUARY, 10);
      Month mn = ldt.getMonth(); // FEBRUARY
      int mnIntValue = mn.getValue(); // 2
      int minLength = mn.minLength(); // 28
      int maxLength = mn.maxLength(); // 29
      Month firstMonthOfQuarter = mn.firstMonthOfQuarter(); // JANUARY
  
Q27_Get info of given time
      LocalTime time = LocalTime.of(12, 24, 32);  
      int hour = time.getHour(); 
      int minute = time.getMinute();  
      
Q28_Display date time info before some hrs & mins
     LocalDateTime dateTime = LocalDateTime.now().minusHours(5).minusMinutes(30); // Before 5 houres and 30 minutes
      int second = time.getSecond(); 
 
Q29_Convert str to date
   String string = "May 1, 2016";
   DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MMMM d, yyyy", Locale.ENGLISH);
   LocalDate date = LocalDate.parse(string, formatter);
   
Q30_Compute difference between 2 dates
   LocalDate pdate = LocalDate.of(2012, 01, 01);
   LocalDate now = LocalDate.now();
   Period diff = Period.between(pdate, now);
   diff.getYears(), diff.getMonths(), diff.getDays()
   
Q31_Compute difference between 2 dates (in time)
     LocalDateTime dateTime = LocalDateTime.of(2016, 9, 16, 0, 0);
     LocalDateTime dateTime2 = LocalDateTime.now();
     int diffInNano = java.time.Duration.between(dateTime, dateTime2).getNano();
     long diffInSeconds = java.time.Duration.between(dateTime, dateTime2).getSeconds();
     long diffInMilli = java.time.Duration.between(dateTime, dateTime2).toMillis();
     long diffInMinutes = java.time.Duration.between(dateTime, dateTime2).toMinutes();
     long diffInHours = java.time.Duration.between(dateTime, dateTime2).toHours();]
     # java.time.Duration.between (dateTime1, dateTime2) : .getNano(), .getSeconds(), .toMillis(), .toMinutes(), .toHours()
     
Q32_Calculate age
     LocalDate pdate = LocalDate.of(1989, 04, 11);    // date of birth
     LocalDate now = LocalDate.now();		      // current date
     Period diff = Period.between(pdate, now);        // difference between current date and date of birth
     diff.getYears(), diff.getMonths(), diff.getDays())
     
Q33_Get next & previous Friday
    LocalDate dt = LocalDate.now();    
    dt.with(TemporalAdjusters.next(DayOfWeek.FRIDAY)) //Next Friday
    dt.with(TemporalAdjusters.previous(DayOfWeek.FRIDAY)) //Previous Friday
    
Q34_Get today's date at midnight time
      Calendar cal = new GregorianCalendar();
      cal.set(Calendar.HOUR_OF_DAY, 0); //anything 0 - 23
      cal.set(Calendar.MINUTE, 0);
      cal.set(Calendar.SECOND, 0);
      cal.getTime()
      
Q35_Extract date, time from date string
import java.util.*;
import java.text.*;

public class Exercise35 {
  public static void main(String[] args)
   {
    try {    
      String originalString = "2016-07-14 09:00:02";
      Date date = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(originalString);
      String newstr = new SimpleDateFormat("MM/dd/yyyy, H:mm:ss").format(date);
       System.out.println("\n"+newstr+"\n");
      } 
    catch (ParseException e) {
    //Handle exception here
     e.printStackTrace();
     }
    }
}

Q36_Convert a unix timestamp to date in Java
 	Date date = new Date(unix_seconds*1000L); //Convert seconds to milliseconds
 //Format of the date
 	SimpleDateFormat jdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss z");
 	jdf.setTimeZone(TimeZone.getTimeZone("GMT-4"));
 	String java_date = jdf.format(date);
	
Q37_Find seconds since 1970
	long seconds = System.currentTimeMillis() / 1000l;
	
Q40_Display current date without time 
    LocalDate l_date = LocalDate.now();    
...& current time without date
    LocalTime l_time = LocalTime.now();
    
Q41_display combine local date and time in a single object
    LocalDate local_Dt = LocalDate.now();
    LocalTime local_Time = LocalTime.now();
    LocalDateTime localDateTime = LocalDateTime.of(local_Dt, local_Time);
    String localDateTimeAsString = localDateTime

42,43,44

Q45_Print format pattern for date & time
 LocalDate /localDate/ = LocalDate.noew()
 DateTimeFormatter /formatterLocalDate/ = DateTimeFormatter.ofPattern("");
 result = /formatterLocalDate/.format(/localDate/);

Q46_Count no. of days between 2 years
if (ly > fy) {
     for (int i = fy; i <= ly; i++) {
       System.out.println("Year: " + i + " = " + number_of_days(i));
     }
     
 public static int number_of_days(int year) {
   if (is_Leap_Year(year)) return 366;
   else return 365;
 }
 public static boolean is_Leap_Year(int year) {
   return (year % 4 == 0 && year % 100 != 0) || year % 400 == 0;
 }
}


      

        
 
