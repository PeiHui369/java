- m * n 2D array
- hourglass: (if use 1, as long as have 1 in any position acceptable)
a b c
  d
e f g

====
sum of hourglass = sum of all numbers within it
Find largest sum of hourglass:
1 1 1 0 0 0
0 1 0 0 0 0
1 1 1 0 0 0
0 0 2 4 4 0
0 0 0 2 0 0
0 0 1 2 4 0
----------------



<https://www.hackerrank.com/challenges/java-2d-array/problem?isFullScreen=true&h_r=next-challenge&h_v=zen>
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<List<Integer>> arr = new ArrayList<>();

        for (int i = 0; i < 6; i++) {
            String[] arrRowTempItems = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

            List<Integer> arrRowItems = new ArrayList<>();

            for (int j = 0; j < 6; j++) {
                int arrItem = Integer.parseInt(arrRowTempItems[j]);
                arrRowItems.add(arrItem);
            }

            arr.add(arrRowItems);
        }
        
         int max = -63; //A negative max num
    for(int i = 0;i<arr.size()-2;i++){ //row (3)
        for(int j =0;j<arr.get(i).size()-2;j++){ //column (3)
            int maxTemp = 0; 
            for(int g = 0; g<3;g++){ //For each rows
                for(int h = 0; h < 3; h++){ // For all element in columns of certain rows (for all elements in a row)
                    if((g==1)&&(h==0||h==2)){ //Ignore 2nd row 1st & 3rd element, no need to add (index = n-1)
                        continue;
                    }
                    else{
                        maxTemp += arr.get(i+g).get(j+h); //Compare if the sum greater than max
                    }
                }
            }
            max = maxTemp>max?maxTemp:max; //If greater, then max = new sum
        }
    }
    System.out.println(max);

        bufferedReader.close();
    }
}
